/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface BbBooking {
      'basketDescription': string;
      'name': string;
      'paymentType': 'voucher'|'cb'|'card'|'18h';
    }
  }

  interface HTMLBbBookingElement extends StencilComponents.BbBooking, HTMLStencilElement {}

  var HTMLBbBookingElement: {
    prototype: HTMLBbBookingElement;
    new (): HTMLBbBookingElement;
  };
  interface HTMLElementTagNameMap {
    'bb-booking': HTMLBbBookingElement;
  }
  interface ElementTagNameMap {
    'bb-booking': HTMLBbBookingElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'bb-booking': JSXElements.BbBookingAttributes;
    }
  }
  namespace JSXElements {
    export interface BbBookingAttributes extends HTMLAttributes {
      'basketDescription'?: string;
      'name'?: string;
      'paymentType'?: 'voucher'|'cb'|'card'|'18h';
    }
  }
}


declare global {

  namespace StencilComponents {
    interface BbContact {
      'email': string;
      'firstName': string;
      'lastName': string;
      'phone': string;
    }
  }

  interface HTMLBbContactElement extends StencilComponents.BbContact, HTMLStencilElement {}

  var HTMLBbContactElement: {
    prototype: HTMLBbContactElement;
    new (): HTMLBbContactElement;
  };
  interface HTMLElementTagNameMap {
    'bb-contact': HTMLBbContactElement;
  }
  interface ElementTagNameMap {
    'bb-contact': HTMLBbContactElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'bb-contact': JSXElements.BbContactAttributes;
    }
  }
  namespace JSXElements {
    export interface BbContactAttributes extends HTMLAttributes {
      'email'?: string;
      'firstName'?: string;
      'lastName'?: string;
      'phone'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface BbCustomerList {
      'customers': any[]|string;
    }
  }

  interface HTMLBbCustomerListElement extends StencilComponents.BbCustomerList, HTMLStencilElement {}

  var HTMLBbCustomerListElement: {
    prototype: HTMLBbCustomerListElement;
    new (): HTMLBbCustomerListElement;
  };
  interface HTMLElementTagNameMap {
    'bb-customer-list': HTMLBbCustomerListElement;
  }
  interface ElementTagNameMap {
    'bb-customer-list': HTMLBbCustomerListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'bb-customer-list': JSXElements.BbCustomerListAttributes;
    }
  }
  namespace JSXElements {
    export interface BbCustomerListAttributes extends HTMLAttributes {
      'customers'?: any[]|string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface BbCustomer {

    }
  }

  interface HTMLBbCustomerElement extends StencilComponents.BbCustomer, HTMLStencilElement {}

  var HTMLBbCustomerElement: {
    prototype: HTMLBbCustomerElement;
    new (): HTMLBbCustomerElement;
  };
  interface HTMLElementTagNameMap {
    'bb-customer': HTMLBbCustomerElement;
  }
  interface ElementTagNameMap {
    'bb-customer': HTMLBbCustomerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'bb-customer': JSXElements.BbCustomerAttributes;
    }
  }
  namespace JSXElements {
    export interface BbCustomerAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface BbInput {
      'endpoint': string;
      'lng': Object|string;
    }
  }

  interface HTMLBbInputElement extends StencilComponents.BbInput, HTMLStencilElement {}

  var HTMLBbInputElement: {
    prototype: HTMLBbInputElement;
    new (): HTMLBbInputElement;
  };
  interface HTMLElementTagNameMap {
    'bb-input': HTMLBbInputElement;
  }
  interface ElementTagNameMap {
    'bb-input': HTMLBbInputElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'bb-input': JSXElements.BbInputAttributes;
    }
  }
  namespace JSXElements {
    export interface BbInputAttributes extends HTMLAttributes {
      'endpoint'?: string;
      'lng'?: Object|string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface BsDropdown {
      'btnType': 'secondary'|'primary'|'success'|'info'|'warning'|'danger';
      'split': boolean;
    }
  }

  interface HTMLBsDropdownElement extends StencilComponents.BsDropdown, HTMLStencilElement {}

  var HTMLBsDropdownElement: {
    prototype: HTMLBsDropdownElement;
    new (): HTMLBsDropdownElement;
  };
  interface HTMLElementTagNameMap {
    'bs-dropdown': HTMLBsDropdownElement;
  }
  interface ElementTagNameMap {
    'bs-dropdown': HTMLBsDropdownElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'bs-dropdown': JSXElements.BsDropdownAttributes;
    }
  }
  namespace JSXElements {
    export interface BsDropdownAttributes extends HTMLAttributes {
      'btnType'?: 'secondary'|'primary'|'success'|'info'|'warning'|'danger';
      'split'?: boolean;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface BsSplitButton {
      'btnType': 'secondary'|'primary'|'success'|'info'|'warning'|'danger';
    }
  }

  interface HTMLBsSplitButtonElement extends StencilComponents.BsSplitButton, HTMLStencilElement {}

  var HTMLBsSplitButtonElement: {
    prototype: HTMLBsSplitButtonElement;
    new (): HTMLBsSplitButtonElement;
  };
  interface HTMLElementTagNameMap {
    'bs-split-button': HTMLBsSplitButtonElement;
  }
  interface ElementTagNameMap {
    'bs-split-button': HTMLBsSplitButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'bs-split-button': JSXElements.BsSplitButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface BsSplitButtonAttributes extends HTMLAttributes {
      'btnType'?: 'secondary'|'primary'|'success'|'info'|'warning'|'danger';
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyComponent {
      'first': string;
      'last': string;
    }
  }

  interface HTMLMyComponentElement extends StencilComponents.MyComponent, HTMLStencilElement {}

  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    'my-component': HTMLMyComponentElement;
  }
  interface ElementTagNameMap {
    'my-component': HTMLMyComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-component': JSXElements.MyComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface MyComponentAttributes extends HTMLAttributes {
      'first'?: string;
      'last'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;